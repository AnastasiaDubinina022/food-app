{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,8DAA8D;AAC9D;AACA,iDAAiD;AACjD;AACA;AACA,4EAA4E;AAC5E,2DAA2D;AAC3D;AACA;AACA,sFAAsF;AACtF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,8DAA8D;AAC9D,gDAAgD;AAChD,8DAA8D;AAC9D;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,gEAAgE;AAChE;AACA;AACA;AACA,mEAAmE;AACnE,mEAAmE;AACnE,0FAA0F;AAC1F,kBAAkB,uCAAuC;AACzD,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,kEAAkE;AAClE,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF,sDAAsD;AACtD,sDAAsD;AACtD,cAAc;AACd,sFAAsF;AACtF;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA,0CAA0C;AAC1C,+CAA+C,IAAI,WAAW,WAAW,MAAM;AAC/E;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC,UAAU;AAClE;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8CAA8C;AAC9C,yCAAyC;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,kCAAkC;AAClC,kCAAkC;AAClC;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD,UAAU;AACV;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,gDAAgD;AAChD;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,oCAAoC;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD,OAAO,OAAO;AACnE;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,UAAU;AACV,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2CAA2C;AAC3C,oEAAoE;AACpE,UAAU;AACV,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,uCAAuC;AACvC;AACA,wCAAwC;AACxC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;AC1CA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,iEAAiE;AACjE;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,WAAW;AACX,2DAA2D;AAC3D,8DAA8D;AAC9D,0DAA0D;AAC1D,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B,WAAW;AACX;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,yBAAyB;AACzB;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCrEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;ACtBA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","sources":["webpack://food-app/./js/modules/calc.js","webpack://food-app/./js/modules/cards.js","webpack://food-app/./js/modules/forms.js","webpack://food-app/./js/modules/modal.js","webpack://food-app/./js/modules/slider.js","webpack://food-app/./js/modules/tabs.js","webpack://food-app/./js/modules/timer.js","webpack://food-app/webpack/bootstrap","webpack://food-app/./js/script.js"],"sourcesContent":["function calc() {\r\n    \r\n    // Calc\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {     // устанавливаем настройки если пользователь уже заходил и они есть в локал сторэдж\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {       // добавляет класс активности блокам, сохраненным в локал сторэдж\r\n        const elements = document.querySelectorAll(selector); // получаем все блоки внутри селектора родителя (ниже вызываем с '#gender div')\r\n\r\n        elements.forEach((elem) => {             // перебираем блоки до совпадения\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {  // когда значение айди в блоке и в локал сторэдж совпадет\r\n                elem.classList.add(activeClass);           // этому блоку вешаем класс активности\r\n            }\r\n\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {  // тоже по дата-атрибуту для коэффициента активности\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {   // будет считать результат по формуле. будем вызывать ее каждый раз, когда пользователь меняет данные, чтобы нормально пересчитать значение\r\n        if (!sex || !height || !weight || !age || !ratio) {   // начинаем с проверки, если хотя бы одно поле не заполнено (имеет false в лог.контексте)\r\n            result.textContent = '____';        // выводим сообщение, напр. 'Заполните все поля'\r\n            return;                                           // прерываем функцию, рассчеты проводиться не будут.\r\n        }\r\n\r\n        if (sex == 'female') {   // формула для женщин\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        }\r\n\r\n        if (sex == 'male') {     // формула для мужчин\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {    // получение информации со статических блоков (пол и активность, 1 функция т.к. они одинаковые)\r\n        const elements = document.querySelectorAll(selector);   // получаем все дивы внутри родителя\r\n\r\n        elements.forEach((elem) => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {         // если клик на блок с дата-атрибутом активности\r\n                    ratio = +e.target.getAttribute('data-ratio');  // берем оттуда коэффициент\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));  // сохраняем его в локал сторэдж\r\n                } else {                                 // подразумеваем клик на блок с выбором пола\r\n                    sex = e.target.getAttribute('id');   // записываем оттуда пол \r\n                    localStorage.setItem('sex', e.target.getAttribute('id'))  // сохраняем выбранный пол в локал сторэдж\r\n                }\r\n    \r\n                elements.forEach((elem) => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getInputInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        })\r\n    }\r\n\r\n    getInputInformation('#weight');\r\n    getInputInformation('#height');\r\n    getInputInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n     // используем классы для карточек\r\n\r\n     class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; // не забывать что это массив\r\n            this.parent = document.querySelector(parentSelector); // получаем селектор, куда будем вставлять нашу верстку, можно сделать это и в методе рендер\r\n            this.transfer = 90; // пока пишем фиксированный курс доллара к рублю\r\n            this.changeToRUB(); // можем здесь вызвать метод конвертации валюты, на моменте конструирования, или можем тоже в рендере сделать это\r\n        }\r\n\r\n        changeToRUB() {\r\n            this.price = +this.price * this.transfer;  // +проверка на дурака, если сюда передадут строку чтобы она трансформировалась в число. \r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0 || !this.classes.includes('menu__item')) { // если ни один класс не передан или не передан дефолтный\r\n                this.classes = 'menu__item';          // то присваиваем класс по умолчанию \r\n                element.classList.add(this.classes);  // и добавляем его элементу\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));  // в остальных случаях каждый переданный в аргументы класс добавляем элементу\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {  // гет запрос поэтому передаем только ссылку на базу\r\n        const res = await fetch(url);     // для гет запроса не нужны доп настройки, просто получаем данные\r\n\r\n        if (!res.ok) {                    // если в запросе что-то не так пошло, то выкидываем ошибку вручную и сработает блок .catch\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}` );  // выкинуть ошибку\r\n        }\r\n\r\n        return await res.json();  // возвращаем промис сразу переводим результат в обычный объект\r\n    } \r\n\r\n    getResource('http://localhost:3000/menu')\r\n    .then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => {    // на месте деструктуризируем каждый объект\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n        });\r\n    });\r\n\r\n\r\n    // Альтернативный метод создания карточек из базы данных - не используя классы, а формируя верстку на лету. Например, если нам не нужен шаблон класса, а элементы будут создаваться 1 раз \r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    // .then(data => createCard(data));\r\n\r\n    // function createCard(data) {\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n\r\n    //         element.classList.add('menu__item');\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> руб/день</div>\r\n    //             </div>\r\n    //         `;\r\n\r\n    //         document.querySelector('.menu .container').append(element);\r\n    //     })\r\n    // }\r\n\r\n\r\n    // Использование библиотеки axios\r\n\r\n    // axios.get('http://localhost:3000/menu')\r\n    // .then(data => {\r\n    //     data.data.forEach(({img, altimg, title, descr, price}) => {   \r\n    //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //     });\r\n    // });\r\n}\r\n\r\nmodule.exports = cards;\r\n","function forms() {\r\n    \r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    const message = {\r\n        loading: '../img/form/spinner.svg',     // вместо сообщения просто можно прописать путь картинки\r\n        success: 'Спасибо! Скоро мы с вами свяжемся.',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async (url, data) => {   // отвечает за постинг данных. После сможем ее переиспользовать с другими аргументами\r\n        const res = await fetch(url, {   // ждем результата работы запроса, прежде чем продолжить код, чтобы не было ошибки изза того что сервер ещё не успед ответить и в перем. ничего еще не записалось\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'  \r\n            },\r\n            body: data \r\n        });\r\n\r\n        return await res.json();  // возвращаем промис сразу переводим результат в обычный объект, потом ниже сможем его обработать через then/catch\r\n    }                             // тоже ждем результата работы метода прежде чем ретёрнить его\r\n\r\n    function bindPostData(form) {   // привязка постинга. передаем форму аргументом, удобно внутри на неё повесить обработчик\r\n        form.addEventListener('submit', (event) => {\r\n            event.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;  // устанавливаем изображение спиннера\r\n            statusMessage.style.cssText = `       \r\n                display: block;\r\n                margin: 0 auto;\r\n            `;                    // делаем спиннер по центру (лучше создать css-класс и добавлять класс, а не инлайн-стили)\r\n            \r\n            // form.append(statusMessage);\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n    \r\n            const formData = new FormData(form);\r\n\r\n            // const object = {};    // объект формдаты нельзя преобразовать сразу в джейсон, поэтому создаем новый объект из формдаты\r\n            // formData.forEach(function(value, key) {\r\n            //     object[key] = value;\r\n            // });\r\n\r\n            // более элегантный способ преобразовать формдату в джейсон:\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));  // формдату трансформируем в матрицу и сразу обратно в объект, после чего преобразуем объект в джейсон\r\n\r\n            postData('http://localhost:3000/requests', json)  // отсюда вернется промис который сможем нормально обработать с помощью then/catch\r\n            .then((data) => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    };\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal();\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">                \r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    \r\n    // Modal\r\n\r\n    const modalTrigger = document.querySelectorAll('[data-modal]');\r\n    const modal = document.querySelector('.modal');\r\n\r\n    function openModal() {\r\n        //modal.classList.toggle('show');\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n        document.body.style.overflow = 'hidden'; \r\n        clearInterval(modalTimerId); // ниже есть сеттаймаут открывающий модалку через 5 сек как пользователь зашел. Здесь мы его очищаем в том случае, если пользователь еще раньше сам открыл модалку по нажатию кнопки и уже его видел, чтобы повторно оно не выскакивало и не бесило.\r\n    }\r\n\r\n    modalTrigger.forEach((item) => {\r\n        item.addEventListener('click', openModal);\r\n    });\r\n\r\n    function closeModal() {\r\n        //modal.classList.toggle('show');\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        document.body.style.overflow = ''; // восстановить скролл при закрытии окна - браузер сам подставит значение по умолчанию.\r\n    }\r\n\r\n    modal.addEventListener('click', (event) => {\r\n    if (event.target === modal || event.target.getAttribute('data-close') == '') {\r\n        closeModal();\r\n    }\r\n    });\r\n\r\n    document.addEventListener('keydown', (event) => {\r\n        if (event.code === 'Escape' && modal.classList.contains('show')) {\r\n        closeModal();\r\n    } // если нажата клавиша esc при открытом модальном окне, то тогда вызываем функцию закрытия, при закрытом окне она не будет срабатывать.\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 50000); // открываем модалку через 5 сек после захода пользователя на страницу\r\n    \r\n    function showModalByScroll() {\r\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll); // удаляем обработчик события после того как он отработал 1 раз, для того чтобы больше окно не высвечивалось при повторной прогрутке в конец страницы.\r\n\r\n        } // window.scrollY = window.pageYOffset (depricated)\r\n          // document.documentElement.scrollHeight -1 = в конце добавляем -1px иначе не срабатывает - это баг, возможно связанный с некоторыми версиями браузеров или ограничениями некоторых мониторов. т.е. окно срабатывает на 1 px раньше самой нижней точки прокрутки, в этом ничего страшного.\r\n    } \r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    \r\n    // Slider v.1\r\n\r\n    const current = document.querySelector('#current');\r\n    const total = document.querySelector('#total');\r\n    const slides = document.querySelectorAll('.offer__slide');\r\n    const slider = document.querySelector('.offer__slider');\r\n    const prev = document.querySelector('.offer__slider-prev');\r\n    const next = document.querySelector('.offer__slider-next');\r\n    const slidesWrapper = document.querySelector('.offer__slider-wrapper');\r\n    const slidesField = document.querySelector('.offer__slider-inner');\r\n    const width = window.getComputedStyle(slidesWrapper).width;   // '650px'\r\n    let slideIndex = 0;\r\n\r\n    // total.textContent = getZero(slides.length);\r\n\r\n    // hideSlides();\r\n    // showSlide(slideIndex);\r\n    \r\n    // function hideSlides(){\r\n    //     slides.forEach(item => {\r\n    //         item.classList.remove('show', 'fade');\r\n    //         item.classList.add('hide');\r\n    //     });\r\n    // }\r\n\r\n    // function showSlide(i) {\r\n    //     slides[i].classList.add('show', 'fade');\r\n    //     slides[i].classList.remove('hide');\r\n    //     current.textContent = getZero(i + 1);\r\n    // }\r\n\r\n    // function calculateSlideIndex(i) {\r\n    //     if (i === slides.length) {\r\n    //         slideIndex = 0;\r\n    //     }\r\n\r\n    //     if (i < 0) {\r\n    //         slideIndex = slides.length - 1;\r\n    //     }\r\n\r\n    //     showSlide(slideIndex);\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     slideIndex--;\r\n    //     hideSlides();\r\n    //     calculateSlideIndex(slideIndex);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     slideIndex++;\r\n    //     hideSlides();\r\n    //     calculateSlideIndex(slideIndex);\r\n    // });\r\n\r\n    \r\n    // Slider v.2 (carousel)\r\n\r\n    let offset = 0;  // отступ, на который будем двигать поле слайдеров, изначальная позиция 0.\r\n    \r\n    setTotal();\r\n    setSlideIndex();\r\n\r\n    function setTotal() {\r\n        if (slides.length < 10) {\r\n            total.textContent = `0${slides.length}`;\r\n        } else {\r\n            total.textContent  = slides.length;\r\n        }\r\n    }\r\n\r\n    function setSlideIndex() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex + 1}`;\r\n        } else {\r\n            current.textContent = slideIndex + 1;\r\n        }\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';  // устанавливаем ширину всего поля слайдов (4 слайда = 400%)\r\n    slidesField.style.display = 'flex';         // выстраиваем слайды в строку\r\n    slidesField.style.transition = '0.5s all';  \r\n\r\n    slidesWrapper.style.overflow = 'hidden';  // скрываем остальные слайды, выходящие за предел окна\r\n\r\n    slides.forEach(slide => {          \r\n        slide.style.width = width;  // убеждаемся что все слайды будут одинаковой ширины и поместятся в поле\r\n    });\r\n\r\n    slider.style.position = 'relative'; \r\n\r\n    function transformSlidesField() {\r\n        slidesField.style.transform = `translateX(-${offset}px)`;  // сдвигаем поле слайдов на ширину отступа\r\n    }\r\n\r\n    const indicators = document.createElement('ol');\r\n    const dots = [];  // создаем настоящий массив чтобы запушить в него точки и затем навесить им класс активности\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {    // создаем точки \r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i);\r\n        dot.classList.add('dot');\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    };\r\n\r\n    function displayActiveDot() {  \r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex].style.opacity = 1;\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {  // если отступ равен общей ширине скрытых слайдов (650 * 3), т.е. если мы уже на последнем слайде, возвращаем отступ в исходное 0 - т.е. возвращаемся на первый слайд\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);  // в остальных случаях добавляем отступ равный ширине слайда\r\n        }\r\n\r\n        transformSlidesField();  \r\n\r\n        if (slideIndex == slides.length - 1) {\r\n            slideIndex = 0;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        setSlideIndex();\r\n        displayActiveDot();\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {                 // если отступ равен 0 - мы на первом слайде\r\n            offset = deleteNotDigits(width) * (slides.length - 1);  // то устанавливаем оступ равный ширине всех скрытых слайдов - т.е. перелистываем на последний слайд\r\n        } else {\r\n            offset -= deleteNotDigits(width);  // в остальных случаях отнимаем отступ равный ширине слайда\r\n        }\r\n\r\n        transformSlidesField();   \r\n\r\n        if (slideIndex == 0) {\r\n            slideIndex = slides.length - 1;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        setSlideIndex();\r\n        displayActiveDot();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (event) => {\r\n            const slideTo = event.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = +slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo);\r\n\r\n            transformSlidesField();  \r\n            setSlideIndex();\r\n            displayActiveDot();\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    // Tabs\r\n\r\n    const tabs = document.querySelectorAll('.tabheader__item');\r\n    const tabsContent = document.querySelectorAll('.tabcontent');\r\n    const tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');    // toggle здесь исп-ть не можем, иначе будет путаница с классами      \r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {   // параметр по умолчанию, если при вызове не передаем др.аргумент\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;  // если много раз используем event.target то лучше поместить его в переменную\r\n\r\n        if(target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {  // когда перебираемый таб совпадет с тем на который кликнули\r\n                    hideTabContent();\r\n                    showTabContent(i);  // покажем его, передав его индекс аргументом \r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\nmodule.exports = tabs;","function timer() {\r\n     // Timer\r\n\r\n     const deadLine = '2024-05-11';  // задаем конечную дату. она так же может приходить из разных источников.\r\n    \r\n     function getTimeRemaining(endtime) {\r\n         let days, hours, minutes, seconds;\r\n         const t = Date.parse(endtime) - Date.parse(new Date()); // вычисляем общее кол-во милисек, между сейчас (начало отсчета) и конечной датой\r\n \r\n         if (t <= 0) {  // если конечная дата прошла, т.е. время закончилось, то отображаем везде нули, чтобы не видеть в таком случае отрицательных значений.\r\n             days = 0;\r\n             hours = 0;\r\n             minutes = 0;\r\n             seconds = 0;\r\n         } else {\r\n             days = Math.floor(t / (1000 * 60 * 60 * 24)); // вычисляем кол-во дней до конечной даты с округлением - общее кол-во делим на кол-во милисек в 1 дне\r\n             hours = Math.floor((t / (1000 * 60 * 60) % 24)); // делим общие милисекунды на милисек в 1 часе, получая кол-во часов до конечной даты, и затем получаем остаток от деления этих часов на 24, чтобы использовать в таймере его, если часов получилось больше чем в сутках\r\n             minutes = Math.floor((t / 1000 / 60) % 60);  // делим общие милисек на 1000 получаем секунды и их делим на 60 получаем минуты. и получаем остаток от деления всех минут на 60, т.к. отображаемые минуты не могут быть больше 60\r\n             seconds = Math.floor((t / 1000) % 60);  // получаем время в секундах, и остаток от деления их на 60\r\n         }\r\n         \r\n         return {\r\n             'total': t,\r\n             'days': days,\r\n             'hours': hours,\r\n             'minutes': minutes,\r\n             'seconds': seconds\r\n         }  // возвращаем полученные значения наружу в виде объекта, чтобы там можно было с ними далее работать\r\n \r\n         // сокращенный синтаксис, то же что и строки выше\r\n         // return {'total': t, days.hours, minutes, seconds}    \r\n     }\r\n \r\n     function getZero(num) {\r\n         if (num >= 0 && num < 10) {\r\n             return `0${num}`;\r\n         } else {\r\n             return num;\r\n         }\r\n     }  // функция-помощник, подставляет 0 перед числом если оно однозначное\r\n \r\n     function setClock(selector, endtime) {\r\n         const timer = document.querySelector(selector);\r\n         const days = timer.querySelector('#days');\r\n         const hours = timer.querySelector('#hours');\r\n         const minutes = timer.querySelector('#minutes');\r\n         const seconds = timer.querySelector('#seconds');\r\n \r\n         const timeInterval = setInterval(updateClock, 1000);  // устанавливаем интервал чтобы таймер обновлялся каждую секунду\r\n \r\n         updateClock();  // инициализация функции, первый вызов вручную чтобы сразу вставала нужная дата, а не висело секунду до запуска сетинтервала то, что в верстке\r\n         \r\n         function updateClock() {\r\n             const t = getTimeRemaining(endtime);  // получаем сюда объект с вычисленными величинами из этой функции\r\n \r\n             days.innerHTML = getZero(t.days);  \r\n             hours.innerHTML = getZero(t.hours);\r\n             minutes.innerHTML = getZero(t.minutes);\r\n             seconds.innerHTML = getZero(t.seconds);  // помещаем их в полученные селекторы\r\n \r\n             if(t.total <= 0) {\r\n                 clearInterval(timeInterval);  // останавливаем таймер когда истечет конечная дата\r\n             }\r\n         }\r\n     }\r\n \r\n     setClock('.timer', deadLine);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs');\r\n    const timer = require('./modules/timer');\r\n    const slider = require('./modules/slider');\r\n    const modal = require('./modules/modal');\r\n    const forms = require('./modules/forms');\r\n    const cards = require('./modules/cards');\r\n    const calc = require('./modules/calc');\r\n\r\n    tabs();\r\n    timer();\r\n    slider();\r\n    modal();\r\n    forms();\r\n    cards();\r\n    calc();\r\n});                                           \r\n\r\n"],"names":[],"sourceRoot":""}